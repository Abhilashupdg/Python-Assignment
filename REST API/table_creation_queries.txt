CREATE DATABASE northwind;

USE northwind;

CREATE TABLE Region (
    RegionID int(11) NOT NULL,	
 	RegionDescription varchar(50), 	
    PRIMARY KEY(RegionID)
);

CREATE TABLE Customers (
    CustomerID VARCHAR(5) NOT NULL,
    CompanyName VARCHAR(40),
    ContactName VARCHAR(30),
    ContactTitle VARCHAR(30),
    Address VARCHAR(60),
    City VARCHAR(15),
    Region VARCHAR(15),
    PostalCode VARCHAR(10),
    Country VARCHAR(15),
    Phone VARCHAR(24),
    Fax VARCHAR(24),
    PRIMARY KEY(CustomerID)
);

CREATE TABLE Territories (
    TerritoryID VARCHAR(20) NOT NULL,
    TerritoryDescription VARCHAR(50),
    RegionID INT(11) NOT NULL,
    PRIMARY KEY (TerritoryID),
    FOREIGN KEY (RegionID)
        REFERENCES Region (RegionID)
);

CREATE TABLE employees (
    EmployeeID INT(11) NOT NULL,
    LastName VARCHAR(20),
    FirstName VARCHAR(10),
    Title VARCHAR(30),
    TitleOfCourtesy VARCHAR(25),
    BirthDate DATETIME,
    HireDate DATETIME,
    Address VARCHAR(60),
    City VARCHAR(15),
    Region VARCHAR(15),
    PostalCode VARCHAR(10),
    Country VARCHAR(15),
    HomePhone VARCHAR(24),
    Extension VARCHAR(4),
    Notes MEDIUMTEXT,
    ReportsTo INT(11),
    PhotoPath VARCHAR(255),
    Salary FLOAT,
    PRIMARY KEY(EmployeeID)
);

CREATE TABLE EmployeeTerritories (
    EmployeeID INT(11) NOT NULL,
    TerritoryID VARCHAR(20) NOT NULL,
    FOREIGN KEY (EmployeeID)
        REFERENCES Employees (EmployeeID),
    FOREIGN KEY (TerritoryID)
        REFERENCES Territories (TerritoryID)
);

CREATE TABLE Shippers (
    ShipperID INT(11) NOT NULL,
    CompanyName VARCHAR(40),
    Phone VARCHAR(24),
    PRIMARY KEY (ShipperID)
);

CREATE TABLE Orders (
    OrderID INT(11),
    CustomerID VARCHAR(5) NOT NULL,
    EmployeeID INT(11) NOT NULL,
    OrderDate DATETIME,
    RequiredDate DATETIME,
    ShippedDate DATETIME,
    ShipVia INT(11),
    Freight DECIMAL(10 , 4 ),
    ShipName VARCHAR(40),
    ShipAddress VARCHAR(60),
    ShipCity VARCHAR(15),
    ShipRegion VARCHAR(15),
    ShipPostalCode VARCHAR(10),
    ShipCountry VARCHAR(15),
    PRIMARY KEY (OrderID),
    FOREIGN KEY (CustomerID)
        REFERENCES Customers (CustomerID),
    FOREIGN KEY (EmployeeID)
        REFERENCES Employees (EmployeeID),
    FOREIGN KEY (ShipVia)
        REFERENCES Shippers (ShipperID)
);

CREATE TABLE Suppliers (
    SupplierID INT(11) NOT NULL,
    CompanyName VARCHAR(40),
    ContactName VARCHAR(30),
    ContactTitle VARCHAR(30),
    Address VARCHAR(60),
    City VARCHAR(15),
    Region VARCHAR(15),
    PostalCode VARCHAR(10),
    Country VARCHAR(15),
    Phone VARCHAR(24),
    Fax VARCHAR(24),
    HomePage MEDIUMTEXT,
    PRIMARY KEY (SupplierID)
);

CREATE TABLE Categories (
    CategoryID INT(11) NOT NULL,
    CategoryName VARCHAR(15),
    Description MEDIUMTEXT,
    PRIMARY KEY (CategoryID)
);

CREATE TABLE Products (
    ProductID INT(11) NOT NULL,
    ProductName VARCHAR(40),
    SupplierID INT(11) NOT NULL,
    CategoryID INT(11) NOT NULL,
    QuantityPerUnit VARCHAR(20),
    UnitPrice DECIMAL(10 , 4 ),
    UnitsInStock SMALLINT(2),
    UnitsOnOrder SMALLINT(2),
    ReorderLevel SMALLINT(2),
    Discontinued TINYINT(1),
    PRIMARY KEY (ProductID),
    FOREIGN KEY (SupplierID)
        REFERENCES Suppliers (SupplierID),
    FOREIGN KEY (CategoryID)
        REFERENCES Categories (CategoryID)
);

CREATE TABLE OrderDetails (
    OrderID INT(11) NOT NULL,
    ProductID INT(11) NOT NULL,
    UnitPrice DECIMAL(10 , 4 ),
    Quantity SMALLINT(2),
    Discount DOUBLE(8 , 0 ),
    FOREIGN KEY (OrderID)
        REFERENCES Orders (OrderID),
    FOREIGN KEY (ProductID)
        REFERENCES Products (ProductID)
);

CREATE TABLE CustomerDemographics (
    CustomerTypeID VARCHAR(10) NOT NULL,
    CustomerDesc MEDIUMTEXT,
    PRIMARY KEY (CustomerTypeID)
);

CREATE TABLE CustomerCustomerDemo (
    CustomerID VARCHAR(5) NOT NULL,
    CustomerTypeID VARCHAR(10) NOT NULL,
    PRIMARY KEY (CustomerID),
    FOREIGN KEY (CustomerID)
        REFERENCES Customers (CustomerID),
    FOREIGN KEY (CustomerTypeID)
        REFERENCES CustomerDemographics (CustomerTypeID)
);









